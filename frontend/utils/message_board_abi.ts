export const MESSAGE_BOARD_ABI = {
  address: "0x1ab9ffc01fd3696f16ec6208173d4a21f978752b68a8f51e3ced73631e4b1f4b",
  name: "medical_records",
  friends: [],
  exposed_functions: [
    {
      name: "init_registry",
      visibility: "public",
      is_entry: true,
      is_view: false,
      generic_type_params: [],
      params: ["&signer"],
      return: [],
    },
    {
      name: "register_patient",
      visibility: "public",
      is_entry: true,
      is_view: false,
      generic_type_params: [],
      params: ["&signer"],
      return: [],
    },
    {
      name: "register_doctor",
      visibility: "public",
      is_entry: true,
      is_view: false,
      generic_type_params: [],
      params: ["&signer", "address"],
      return: [],
    },
    {
      name: "upload_report",
      visibility: "public",
      is_entry: true,
      is_view: false,
      generic_type_params: [],
      params: ["&signer", "0x1::string::String", "bool"],
      return: [],
    },
    {
      name: "authorize_doctor",
      visibility: "public",
      is_entry: true,
      is_view: false,
      generic_type_params: [],
      params: ["&signer", "address"],
      return: [],
    },
    {
      name: "view_reports",
      visibility: "public",
      is_entry: false,
      is_view: true,
      generic_type_params: [],
      params: ["&signer", "address"],
      return: ["vector<MedicalReport>"],
    },
    {
      name: "emergency_access",
      visibility: "public",
      is_entry: false,
      is_view: true,
      generic_type_params: [],
      params: ["&signer", "address"],
      return: ["vector<MedicalReport>"],
    },
  ],
  structs: [
    {
      name: "MedicalReport",
      is_native: false,
      is_event: false,
      abilities: ["store"],
      generic_type_params: [],
      fields: [
        { name: "report_hash", type: "0x1::string::String" },
        { name: "timestamp", type: "u64" },
        { name: "emergency_flag", type: "bool" },
      ],
    },
    {
      name: "UserProfile",
      is_native: false,
      is_event: false,
      abilities: ["store"],
      generic_type_params: [],
      fields: [
        { name: "role", type: "u8" },
        { name: "reports", type: "vector<MedicalReport>" },
        { name: "authorized_doctors", type: "vector<address>" },
      ],
    },
    {
      name: "Registry",
      is_native: false,
      is_event: false,
      abilities: ["key"],
      generic_type_params: [],
      fields: [
        { name: "users", type: "aptos_std::table::Table<address, UserProfile>" },
        { name: "verified_doctors", type: "aptos_std::table::Table<address, bool>" },
      ],
    },
  ],
} as const;